# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: ID!
  name: String!
  product: Product!
}

type Supplier {
  id: ID!
  fullname: String!
  email: String!
  phone: String!
  purchase: [PurchaseOrder!]!
}

type PurchaseOrder {
  id: ID!
  supplier: Supplier!
  date: String!
  fullPurchasePrice: Float!
  detailPurchaseOrders(offset: Int = 0, limit: Int = 10): [DetailPurchaseOrder!]!
  totalProducts: Float!
}

type DetailPurchaseOrder {
  id: ID!
  product: Product!
  purchaseOrder: PurchaseOrder!
  inputQuantity: Int!
  unitPrice: Float!
  purchasePrice: Float!
}

type Client {
  id: ID!
  fullname: String!
  email: String!
  phone: String!
  sales: [SalesOrder!]!
}

type SalesOrder {
  id: ID!
  client: Client!
  date: String!
  fullSalePrice: Float!
  detailSalesOrder: [DetailSalesOrder!]!
}

type DetailSalesOrder {
  id: ID!
  product: Product!
  salesOrder: SalesOrder!
  outputQuantity: Int!
  unitPrice: Float!
  salePrice: Float!
}

type Product {
  id: ID!
  description: String!
  category: Category!
  stock: Int!
  image: String!
  priceCost: Float!
  gain: Float!
  saleUnitPrice: Float!
  detailPurchaseOrder: [DetailPurchaseOrder!]!
  detailSalesOrder: [DetailSalesOrder!]!
}

type User {
  id: ID!
  email: String!
  fullname: String!
  rol: String!
  phone: String!
  isActive: Boolean!
  lastUpdateBy: User
}

type AuthResponse {
  token: String!
  user: User!
}

type Query {
  products(offset: Int = 0, limit: Int = 10, search: String): [Product!]!
  product(id: ID!): Product!
  clients(offset: Int = 0, limit: Int = 10, search: String): [Client!]!
  client(id: ID!): Client!
  suppliers(offset: Int = 0, limit: Int = 10, search: String): [Supplier!]!
  supplier(id: ID!): Supplier!
  users(offset: Int = 0, limit: Int = 10, search: String): [User!]!
  user(id: ID!): User!
  categories: [Category!]!
  revalite: AuthResponse!
  purchaseOrdersByDate(date: String = "24/08/2023", offset: Int = 0, limit: Int = 10): [PurchaseOrder!]!
  purchaseOrder(id: ID!): PurchaseOrder!
  detailPurchaseOrder(id: String!): DetailPurchaseOrder!
  salesOrders: [SalesOrder!]!
  salesOrder(id: Int!): SalesOrder!
  detailSalesOrders: [DetailSalesOrder!]!
  detailSalesOrder(id: Int!): DetailSalesOrder!
}

type Mutation {
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: ID!): String!
  createClient(createClientInput: CreateClientInput!): Client!
  updateClient(updateClientInput: UpdateClientInput!): Client!
  removeClient(id: ID!): String!
  createSupplier(createSupplierInput: CreateSupplierInput!): Supplier!
  updateSupplier(updateSupplierInput: UpdateSupplierInput!): Supplier!
  removeSupplier(id: ID!): String!
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  removeUser(id: ID!): String!
  blockUser(id: ID!): User!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createPurchaseOrder(createPurchaseOrderInput: CreatePurchaseOrderInput!, createDetailPurchaseOrderInput: CreateDetailPurchaseOrderInput!, purchaseOrderProductInput: PurchaseOrderProductInput!): Boolean!
  updatePurchaseOrder(updatePurchaseOrderInput: UpdatePurchaseOrderInput!): PurchaseOrder!
  removePurchaseOrder(id: Int!): PurchaseOrder!
  createDetailPurchaseOrder(purchaseOrderId: String!, createDetailPurchaseOrderInput: CreateDetailPurchaseOrderInput!, purchaseOrderProductInput: PurchaseOrderProductInput!): DetailPurchaseOrder!
  updateDetailPurchaseOrder(updateDetailPurchaseOrderInput: UpdateDetailPurchaseOrderInput!): DetailPurchaseOrder!
  removeDetailPurchaseOrder(id: Int!): DetailPurchaseOrder!
  createSalesOrder(createSalesOrderInput: CreateSalesOrderInput!): SalesOrder!
  updateSalesOrder(updateSalesOrderInput: UpdateSalesOrderInput!): SalesOrder!
  removeSalesOrder(id: Int!): SalesOrder!
  createDetailSalesOrder(createDetailSalesOrderInput: CreateDetailSalesOrderInput!): DetailSalesOrder!
  updateDetailSalesOrder(updateDetailSalesOrderInput: UpdateDetailSalesOrderInput!): DetailSalesOrder!
  removeDetailSalesOrder(id: Int!): DetailSalesOrder!
}

input CreateProductInput {
  description: String!
  image: String!
  categoryId: ID
}

input UpdateProductInput {
  description: String
  image: String
  categoryId: ID
  id: ID!
}

input CreateClientInput {
  fullname: String!
  email: String!
  phone: String!
}

input UpdateClientInput {
  fullname: String
  email: String
  phone: String
  id: ID!
}

input CreateSupplierInput {
  fullname: String!
  email: String!
  phone: String!
}

input UpdateSupplierInput {
  fullname: String
  email: String
  phone: String
  id: ID!
}

input CreateUserInput {
  email: String!
  password: String!
  fullname: String!
  rol: ValidRoles!
  phone: String!
}

"""Ãšnicos roles de los usuarios"""
enum ValidRoles {
  administrador
  trabajador
}

input UpdateUserInput {
  email: String
  password: String
  fullname: String
  rol: ValidRoles
  phone: String
  id: ID!
  isActive: Boolean
}

input CreateCategoryInput {
  name: String!
}

input CreatePurchaseOrderInput {
  supplierId: ID!
  date: String!
  fullPurchasePrice: Float!
}

input CreateDetailPurchaseOrderInput {
  productIds: [ID!]!
  inputQuantity: [Int!]!
  unitPrice: [Float!]!
  purchasePrice: [Float!]!
}

input PurchaseOrderProductInput {
  stock: [Int!]!
  priceCost: [Float!]!
  gain: [Float!]!
  saleUnitPrice: [Float!]!
}

input UpdatePurchaseOrderInput {
  supplierId: ID
  date: String
  fullPurchasePrice: Float
  id: Int!
}

input UpdateDetailPurchaseOrderInput {
  productIds: [ID!]
  inputQuantity: [Int!]
  unitPrice: [Float!]
  purchasePrice: [Float!]
  id: Int!
}

input CreateSalesOrderInput {
  client: ID!
  date: String!
  fullSalePrice: Float!
}

input UpdateSalesOrderInput {
  client: ID
  date: String
  fullSalePrice: Float
  id: Int!
}

input CreateDetailSalesOrderInput {
  product: ID!
  salesOrder: ID!
  outputQuantity: Int!
  unitPrice: Float!
  salePrice: Float!
}

input UpdateDetailSalesOrderInput {
  product: ID
  salesOrder: ID
  outputQuantity: Int
  unitPrice: Float
  salePrice: Float
  id: Int!
}